openapi: "3.0.0"
info:
  title: Gemini Generator
  version: 1.0.0
paths:
  /userservice/ml/txt2img:
    post:
      summary: Generate Gemini image from text input.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                prompt:
                  type: string
                  example: "(portrait:1.3), (best quality), (masterpiece), (high resolution), perfect anatomy, perfect_finger, hyper detail,  high quality, intricate details, super detail, 1girl"
                seed:
                  type: integer
                  example: -1
                sampler_name:
                  type: string
                  example: "DPM++ 2M Karras"
                batch_size:
                  type: integer
                  example: 1
                steps:
                  type: integer
                  example: 20
                cfg_scale:
                  type: integer
                  example: 7
                width:
                  type: integer
                  example: 507
                height:
                  type: integer
                  example: 676
                do_not_save_samples:
                  type: boolean
                  example: true
                do_not_save_grid:
                  type: boolean
                  example: true
                negative_prompt:
                  type: string
                  example: "(nsfw:2), lowres, ((bad anatomy)), ((bad hands)), text, missing finger, extra digits, fewer digits, blurry, ((mutated hands and fingers)), (poorly drawn face), ((mutation)), ((deformed face)), (ugly), ((bad proportions)), ((extra limbs)), extra face, (double head), (extra head), ((extra feet)), monster, logo, cropped, worst quality, low quality, normal quality, jpeg, humpbacked, long body, long neck, ((jpeg artifacts))"
                sampler_index:
                  type: string
                  example: "DPM++ 2M Karras"
                send_images:
                  type: boolean
                  example: true
                save_images:
                  type: boolean
                  example: true
              required:
                - prompt
      responses:
        '200':
          description: OK
  /userservice/ml/img2img:
    post:
      summary: Generate Gemini image from image input.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
              required:
                - image
      responses:
        '200':
          description: OK
  /userservice/ml/png-info:
    post:
      summary: Extract information from generated Gemini image.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
              required:
                - image
      responses:
        '200':
          description: OK
  /userservice/ml/progress:
    get:
      summary: Check the progress of Gemini image generation.
      responses:
        '200':
          description: OK
  /userservice/ml/interrupt:
    post:
      summary: Interrupt Gemini image generation.
      responses:
        '200':
          description: OK
  /userservice/ml/skip:
    post:
      summary: Skip Gemini image generation and mark it as complete.
      responses:
        '200':
          description: OK
  /userservice/ml/sd-models:
    get:
      summary: Retrieve available SD models.
      responses:
        '200':
          description: OK
  /controlnet/txt2img:
    post:
      summary: Generate Gemini image from text input using ControlNet (beta).
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                prompt:
                  type: string
                  example: "(portrait:1.3), (best quality), (masterpiece), (high resolution), perfect anatomy, perfect_finger, hyper detail,  high quality, intricate details, super detail, 1girl"
                seed:
                  type: integer
                  example: -1
                cfg_file:
                  type: string
                  example: "config_f0.json"
                use_half:
                  type: boolean
                  example: false
              required:
                - prompt
      responses:
        '200':
          description: OK
  /controlnet/img2img:
    post:
      summary: Generate Gemini image from image input using ControlNet (beta).
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                cfg_file:
                  type: string
                  example: "config_f0.json"
                use_half:
                  type: boolean
                  example: false
              required:
                - image
                - cfg_file
      responses:
        '200':
          description: OK

